#####################################
# Task:4)Azure Kubernetes Service   #
#           Role: Azure             #
#####################################
#                                   #
#        Author:Marc Bayon          #
#####################################

- name: (Azure) Check if the cluster is already created
  azure_rm_aks_info:
    name: "{{ projectname | regex_replace('[^a-z\\d:]', '')}}{{version | regex_replace('[^a-z\\d:]', '')}}K8sCLUSTER"
    resource_group: "{{projectname}}_{{version}}_RG_K8s"
  register: aks_info
  tags: aks  

- set_fact:
    no_aks: "{{ (aks_info.aks | length) | int }}"
  tags: aks

- name: (Azure) List supported kubernetes version from Azure in region selected
  azure_rm_aksversion_info:
      location: "{{ location }}"
  register: versions
  when: "('delete' in ansible_run_tags) or (no_aks is defined and no_aks == '0')"
  tags: aks


# Deploy Kubernetes Cluster
- name: (Azure) Create Azure Kubernetes Service with VMSS (It will take 20-30 min..., go for a coffee)
  azure_rm_aks:
    name: "{{ projectname | regex_replace('[^a-z\\d:]', '')}}{{version | regex_replace('[^a-z\\d:]', '')}}K8sCLUSTER"
    resource_group: "{{projectname}}_{{version}}_RG_K8s"
    location: "{{location}}"
    dns_prefix: "{{projectname}}K8sCLUSTER"
    kubernetes_version: "{{k8sversion}}" #"{{ versions.azure_aks_versions[-1] }}"
    linux_profile:
      admin_username: azureuser
      ssh_key: ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAg/uWyZP62dj9I1keFKxPlfkpsMe5EvfnJ3E3qkQtJvj09yMzT5lkVmES5A858FVRHOu0vD2TRoretjbuRIj/rhnq5meofMd2+l8YzdAq7QW1/xlTJp0RynuItZI3RkeSVtOM+rVWb/ex5OL+uZ19T+xYPobpy5AhujLeYh4u1E8C3fkPg8G3qjnajbYkAOT8yViAl1GYRJWJSK7gEXEXHmVOUbsB6D1sQP4wW++NHUCLQiZHYR5bvOR+Dy8ye+tYAbz4odbThO9iTIUM/xUYUxI5r5Yd0LEYN2sNehEoxfvqY2yp7wrgbuHtH7mOxu3Rkp+YIzMAQSWJWTmIQRL3tQ== acs-aks
    service_principal:
      client_id: "{{ client_id }}"
      client_secret: "{{ secret }}"
    network_profile:
      load_balancer_sku: standard
    agent_pool_profiles:
      - name: default
        count: 1
        vm_size: "{{ linux_cpu_node }}"
        enable_auto_scaling: True
        type: VirtualMachineScaleSets
        max_count: "{{ linux_cpu_max_count }}"
        min_count: "{{ linux_cpu_min_count }}"
        availability_zones: 3
  tags: aks

- name: (Azure) Get Cluster Credentials
  shell: "az aks get-credentials --resource-group {{projectname}}_{{version}}_RG_K8s --name {{ projectname | regex_replace('[^a-z\\d:]', '')}}{{version | regex_replace('[^a-z\\d:]', '')}}K8sCLUSTER --overwrite-existing"
  tags: aks

- name: (Azure) Enable K8s Dashboard (only for K8s 1.18.x)
  shell: "az aks enable-addons --resource-group {{projectname}}_{{version}}_RG_K8s --name {{ projectname | regex_replace('[^a-z\\d:]', '')}}{{version | regex_replace('[^a-z\\d:]', '')}}K8sCLUSTER -a kube-dashboard"
  tags: aks




