#=============================#
#     notejam Ci/CD .yaml     #
#=============================#
#    Created by: Marc BayÃ³n   #
#                             #
#=============================#

name: Notejam CI/CD

env:
  CLUSTER_NAME: notejam10K8sCLUSTER
  CLUSTER_RESOURCE_GROUP: notejam_1_0_RG_K8s

on:
  push:
    branches:
      - 'main'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch containers/notejam-container/.env
          echo DB_URL="dbnotejam.postgres.database.azure.com" >> containers/notejam-container/.env
          echo DB_PORT="5432" >> containers/notejam-container/.env
          echo DB_USER="posgres@dbnotejam" >> containers/notejam-container/.env
          echo DB_PASSWORD="${{ secrets.DB_PASSWORD }}" >> containers/notejam-container/.env
          cat containers/notejam-container/.env
        
      - name: Create priv key for https
        run: |
          touch containers/nginx-container/certs/privkey.pem
          echo "${{ secrets.PRIVKEY }}" >> containers/nginx-container/certs/privkey.pem

      - name: Build the stack
        run: docker-compose -f containers/docker-compose.yaml up -d

      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'

      - name: Test if works
        run: |
          CODE=`curl --write-out '%{http_code}' -k  --url 'https://localhost/signin/?next=/'`
          if [ $CODE!="200" ] 
          then
              echo "FAILURE"
              echo "Error [HTTP status: $CODE]"
              exit 1
          else
              echo "SUCCESS"
              echo "[HTTP status: $CODE]"
              exit 0
          fi
      
  push-dockerhub:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push notejam
        uses: docker/build-push-action@v2
        with:
          context: containers/notejam-container/
          push: true
          tags: arundil/notejam:latest
      
      - name: Create priv key for https
        run: |
          touch containers/nginx-container/certs/privkey.pem
          echo "${{ secrets.PRIVKEY }}" >> containers/nginx-container/certs/privkey.pem

      - name: Build and push nginx
        uses: docker/build-push-action@v2
        with:
          context: containers/nginx-container/
          push: true
          tags: arundil/nginx:latest

  push-kubernetes:
    needs: push-dockerhub
    runs-on: ubuntu-latest
    steps:
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - name: Log into Azure
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
      
      # Deploy app to AKS
      - name: Deploy to AKS
        run:  kubectl apply -f k8s/k8s.yaml



